{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\taman\\\\Documents\\\\learnreact\\\\src\\\\pages\\\\ClientPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport UpdateClient from \"./UpdateClient\";\nimport NavBar from \"../common/NavBar\";\nimport NewHeader from \"../components/NewHeader\";\nimport Swal from \"sweetalert2\";\nimport AdvancedTable from \"../components/AdvancedTable\";\nimport { isValidInputTimeValue } from \"@testing-library/user-event/dist/utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ClientPage = () => {\n  _s();\n\n  const [dropdownStatus, setDropdownStatus] = useState(0);\n  const [dropDownIndex, setDropDownIndex] = useState(-1);\n  const [client, setclient] = useState([]);\n  useEffect(() => {\n    getClientData();\n  }, []);\n\n  const onSubmit = () => {\n    const swalWithBootstrapButtons = Swal.mixin({\n      customClass: {\n        confirmButton: \"btn btn-success\",\n        cancelButton: \"btn btn-danger\"\n      },\n      buttonsStyling: true\n    });\n    swalWithBootstrapButtons.fire({\n      title: \"Are you sure?\",\n      text: \"You won't be able to revert this!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonText: \"Yes, delete it!\",\n      cancelButtonText: \"No, cancel!\",\n      reverseButtons: true\n    }).then(result => {\n      if (result.isConfirmed) {\n        swalWithBootstrapButtons.fire(\"Deleted!\", \"Your Data has been deleted.\", \"success\");\n      } else if (\n      /* Read more about handling dismissals below */\n      result.dismiss === Swal.DismissReason.cancel) {\n        swalWithBootstrapButtons.fire(\"Cancelled\", \"Your data is safe :)\", \"error\");\n      }\n    });\n  };\n\n  const getClientData = async () => {\n    let result = await fetch(\"http://localhost:9000/client\");\n    result = await result.json();\n    setclient(result);\n  };\n\n  console.log(\"client\", client);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"py-12\",\n      style: {\n        width: \"82%\",\n        position: \"absolute\",\n        left: \"17%\",\n        top: \"10%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ClientPage, \"JzPz9NL2PgYQLETlwef4RElERmc=\");\n\n_c = ClientPage;\nexport default ClientPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClientPage\");","map":{"version":3,"names":["React","useState","useEffect","Link","UpdateClient","NavBar","NewHeader","Swal","AdvancedTable","isValidInputTimeValue","ClientPage","dropdownStatus","setDropdownStatus","dropDownIndex","setDropDownIndex","client","setclient","getClientData","onSubmit","swalWithBootstrapButtons","mixin","customClass","confirmButton","cancelButton","buttonsStyling","fire","title","text","icon","showCancelButton","confirmButtonText","cancelButtonText","reverseButtons","then","result","isConfirmed","dismiss","DismissReason","cancel","fetch","json","console","log","width","position","left","top"],"sources":["C:/Users/taman/Documents/learnreact/src/pages/ClientPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport UpdateClient from \"./UpdateClient\";\r\nimport NavBar from \"../common/NavBar\";\r\nimport NewHeader from \"../components/NewHeader\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nimport AdvancedTable from \"../components/AdvancedTable\";\r\nimport { isValidInputTimeValue } from \"@testing-library/user-event/dist/utils\";\r\n\r\nconst ClientPage = () => {\r\n  const [dropdownStatus, setDropdownStatus] = useState(0);\r\n\r\n  const [dropDownIndex, setDropDownIndex] = useState(-1);\r\n  const [client, setclient] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getClientData();\r\n  }, []);\r\n\r\n  const onSubmit = () => {\r\n    const swalWithBootstrapButtons = Swal.mixin({\r\n      customClass: {\r\n        confirmButton: \"btn btn-success\",\r\n        cancelButton: \"btn btn-danger\",\r\n      },\r\n      buttonsStyling: true,\r\n    });\r\n    swalWithBootstrapButtons\r\n      .fire({\r\n        title: \"Are you sure?\",\r\n        text: \"You won't be able to revert this!\",\r\n        icon: \"warning\",\r\n        showCancelButton: true,\r\n        confirmButtonText: \"Yes, delete it!\",\r\n        cancelButtonText: \"No, cancel!\",\r\n        reverseButtons: true,\r\n      })\r\n      .then((result) => {\r\n        if (result.isConfirmed) {\r\n          swalWithBootstrapButtons.fire(\r\n            \"Deleted!\",\r\n            \"Your Data has been deleted.\",\r\n            \"success\"\r\n          );\r\n        } else if (\r\n          /* Read more about handling dismissals below */\r\n          result.dismiss === Swal.DismissReason.cancel\r\n        ) {\r\n          swalWithBootstrapButtons.fire(\r\n            \"Cancelled\",\r\n            \"Your data is safe :)\",\r\n            \"error\"\r\n          );\r\n        }\r\n      });\r\n  };\r\n\r\n  const getClientData = async () => {\r\n    let result = await fetch(\"http://localhost:9000/client\");\r\n    result = await result.json();\r\n    setclient(result);\r\n  };\r\n  console.log(\"client\", client);\r\n\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      <NewHeader />\r\n\r\n      <div\r\n        className=\"py-12\"\r\n        style={{ width: \"82%\", position: \"absolute\", left: \"17%\", top: \"10%\" }}\r\n      ></div>\r\n    </div>\r\n  );\r\n};\r\nexport default ClientPage;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AAEA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,SAASC,qBAAT,QAAsC,wCAAtC;;;AAEA,MAAMC,UAAU,GAAG,MAAM;EAAA;;EACvB,MAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCX,QAAQ,CAAC,CAAD,CAApD;EAEA,MAAM,CAACY,aAAD,EAAgBC,gBAAhB,IAAoCb,QAAQ,CAAC,CAAC,CAAF,CAAlD;EACA,MAAM,CAACc,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,EAAD,CAApC;EAEAC,SAAS,CAAC,MAAM;IACde,aAAa;EACd,CAFQ,EAEN,EAFM,CAAT;;EAIA,MAAMC,QAAQ,GAAG,MAAM;IACrB,MAAMC,wBAAwB,GAAGZ,IAAI,CAACa,KAAL,CAAW;MAC1CC,WAAW,EAAE;QACXC,aAAa,EAAE,iBADJ;QAEXC,YAAY,EAAE;MAFH,CAD6B;MAK1CC,cAAc,EAAE;IAL0B,CAAX,CAAjC;IAOAL,wBAAwB,CACrBM,IADH,CACQ;MACJC,KAAK,EAAE,eADH;MAEJC,IAAI,EAAE,mCAFF;MAGJC,IAAI,EAAE,SAHF;MAIJC,gBAAgB,EAAE,IAJd;MAKJC,iBAAiB,EAAE,iBALf;MAMJC,gBAAgB,EAAE,aANd;MAOJC,cAAc,EAAE;IAPZ,CADR,EAUGC,IAVH,CAUSC,MAAD,IAAY;MAChB,IAAIA,MAAM,CAACC,WAAX,EAAwB;QACtBhB,wBAAwB,CAACM,IAAzB,CACE,UADF,EAEE,6BAFF,EAGE,SAHF;MAKD,CAND,MAMO;MACL;MACAS,MAAM,CAACE,OAAP,KAAmB7B,IAAI,CAAC8B,aAAL,CAAmBC,MAFjC,EAGL;QACAnB,wBAAwB,CAACM,IAAzB,CACE,WADF,EAEE,sBAFF,EAGE,OAHF;MAKD;IACF,CA3BH;EA4BD,CApCD;;EAsCA,MAAMR,aAAa,GAAG,YAAY;IAChC,IAAIiB,MAAM,GAAG,MAAMK,KAAK,CAAC,8BAAD,CAAxB;IACAL,MAAM,GAAG,MAAMA,MAAM,CAACM,IAAP,EAAf;IACAxB,SAAS,CAACkB,MAAD,CAAT;EACD,CAJD;;EAKAO,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB3B,MAAtB;EAEA,oBACE;IAAA,wBACE,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,SAAD;MAAA;MAAA;MAAA;IAAA,QAFF,eAIE;MACE,SAAS,EAAC,OADZ;MAEE,KAAK,EAAE;QAAE4B,KAAK,EAAE,KAAT;QAAgBC,QAAQ,EAAE,UAA1B;QAAsCC,IAAI,EAAE,KAA5C;QAAmDC,GAAG,EAAE;MAAxD;IAFT;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAWD,CAlED;;GAAMpC,U;;KAAAA,U;AAmEN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}